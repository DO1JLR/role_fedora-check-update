#
# simple playbook to check all hosts and see how many updates they have pending.
# It could be a lot faster if we didn't gather facts, but we need that for yum vs dnf checking
#
# If you want a pretty sorted list, you need to post process the output here with something
# like:
#
# time ansible-playbook check-for-updates.yml | grep msg\": | awk -F: '{print $2}' | sort
#


- name: check for updates (yum)
  yum:
    list: updates
    update_cache: true
  register: yumoutput
  when: ansible_distribution == "Fedora"

- debug:
    msg: "{{ inventory_hostname}} {{ yumoutput.results|length }}"
  when: yumoutput.results|length > 0 and ansible_distribution == "Fedora"

- name: make dnf recheck for new metadata from repos
  command: dnf clean expire-cache warn=false
  when: ansible_distribution == "Fedora"

- name: check for updates (dnf)
  dnf:
    list: updates
  register: dnfoutput
  when: ansible_distribution == "Fedora"

- debug: 
    msg: "{{ inventory_hostname}} {{ dnfoutput.results|length }}"
  when: dnfoutput.results|length > 0 and ansible_distribution == "Fedora"

- debug: 
    msg: "No new updates available"
  when: dnfoutput.results|length > 0 and yumoutput.results|length > 0 and ansible_distribution == "Fedora"

- name: upgrade all packages
  dnf:
    name: "*"
    state: latest
  when: ansible_distribution == "Fedora"

- name: install all updates
  apt:
    upgrade: dist
    update_cache: yes
    autoremove: yes
    autoclean: yes
  register: result
  when: ansible_distribution == "Debian"

- name: List installed and updated packages
  shell: grep -E "^$(date +%Y-%m-%d).+ (install|upgrade) " /var/log/dpkg.log |cut -d " " -f 3-5
  register: result
  when: ansible_distribution == "Debian"

- name: Show Output
  debug: msg="{{ result.stdout_lines }}"
  when: ansible_distribution == "Debian"

